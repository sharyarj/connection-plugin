{"version":3,"file":"connection-plugin.min.js","sources":["../src/utils.ts","../src/picker/view.ts","../src/picker/index.ts","../src/flow.ts","../src/index.ts"],"sourcesContent":["import { Emitter, Connection } from 'rete';\nimport { EventsTypes } from 'rete/types/events';\n\nfunction toTrainCase(str: string) {\n    return str.toLowerCase().replace(/ /g, '-');\n}\n\nexport function getMapItemRecursively<T extends any>(map: WeakMap<Element, T>, el: Element): T | null {\n    return map.get(el) || (el.parentElement ? getMapItemRecursively(map, el.parentElement) : null);\n}\n\nexport function defaultPath(points: number[], curvature: number) {\n    const [x1, y1, x2, y2] = points;\n    const hx1 = x1 + Math.abs(x2 - x1) * curvature;\n    const hx2 = x2 - Math.abs(x2 - x1) * curvature;\n\n    return `M ${x1} ${y1} C ${hx1} ${y1} ${hx2} ${y2} ${x2} ${y2}`;\n}\n\nexport function renderPathData(emitter: Emitter<EventsTypes>, points: number[], connection?: Connection) {\n    const data = { points, connection, d: '' };\n    \n    emitter.trigger('connectionpath', data);\n    \n    return data.d || defaultPath(points, 0.4);\n}\n\nexport function updateConnection({ el, d } : { el: HTMLElement, d: string }) {\n    const path = el.querySelector('.connection path');\n\n    if (!path) throw new Error('Path of connection was broken');\n\n    path.setAttribute('d', d);\n}\n\nexport function renderConnection({ el, d, connection } : { el: HTMLElement, d: string, connection?: Connection }) {\n    const classed = !connection?[]:[\n        'input-' + toTrainCase(connection.input.name),\n        'output-' + toTrainCase(connection.output.name),\n        'socket-input-' + toTrainCase(connection.input.socket.name),\n        'socket-output-' + toTrainCase(connection.output.socket.name)\n    ];\n\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\n\n    console.log(connection!.output);\n\n    svg.classList.add('connection', ...classed);\n    path.classList.add('main-path');\n    path.setAttribute('d', d);\n\n    svg.appendChild(path);\n    el.appendChild(svg);\n\n    updateConnection({ el, d });\n}","import { Output, Input, Emitter } from 'rete';\nimport { EditorView } from 'rete/types/view/index';\nimport { EventsTypes } from 'rete/types/events';\nimport { renderConnection, renderPathData, updateConnection } from '../utils';\n\nexport class PickerView {\n\n    private el: HTMLElement;\n\n    constructor(\n        private emitter: Emitter<EventsTypes>,\n        private editorView: EditorView\n    ) {\n        this.el = document.createElement('div');\n        this.el.style.position = 'absolute';\n        this.editorView.area.appendChild(this.el);\n    }\n\n    updatePseudoConnection(io: Output | Input | null) {\n        if (io !== null) {\n            this.renderConnection(io);\n        } else if (this.el.parentElement) {\n            this.el.innerHTML = '';\n        }\n    }\n\n    private getPoints(io: Output | Input): number[] {\n        const mouse = this.editorView.area.mouse;\n\n        if(!io.node) throw new Error('Node in output/input not found')\n    \n        const node = this.editorView.nodes.get(io.node);\n\n        if(!node) throw new Error('Node view not found')\n    \n        const [x1, y1] = node.getSocketPosition(io);\n\n        return io instanceof Output\n            ? [x1, y1, mouse.x, mouse.y]\n            : [mouse.x, mouse.y, x1, y1];\n    }\n\n    updateConnection(io: Output | Input) {\n        const d = renderPathData(this.emitter, this.getPoints(io));\n\n        updateConnection({ el: this.el, d });\n    }\n\n    renderConnection(io: Output | Input) {\n        const d = renderPathData(this.emitter, this.getPoints(io));\n\n        renderConnection({ el: this.el, d });\n    }\n}","import { NodeEditor, Input, Output, Connection } from 'rete';\nimport { PickerView } from './view';\n\nexport class Picker {\n\n    private editor: NodeEditor;\n    private _io: Output | Input | null = null;\n    public view: PickerView;\n\n    constructor(editor: NodeEditor) {\n        this.editor = editor;\n        this.view = new PickerView(editor, editor.view);\n\n        editor.on('mousemove', () => this.io && this.view.updateConnection(this.io));\n    }\n\n    get io() : Output | Input | null {\n        return this._io;\n    }\n\n    set io(io: Output | Input | null) {\n        this._io = io;\n        this.view.updatePseudoConnection(io);\n    }\n\n    reset() {\n        this.io = null;\n    }\n\n    pickOutput(output: Output) {\n        if (!this.editor.trigger('connectionpick', output)) return;\n        \n        if (this.io instanceof Input) {\n            if(!output.multipleConnections && output.hasConnection())\n                this.editor.removeConnection(output.connections[0])\n    \n            this.editor.connect(output, this.io);\n            this.reset();\n            return;\n        }\n\n        if (this.io) this.reset();\n        this.io = output;\n    }\n\n    pickInput(input: Input) {\n        if (!this.editor.trigger('connectionpick', input)) return;\n\n        if (this.io === null) {\n            if (input.hasConnection()) {\n                this.io = input.connections[0].output;\n                this.editor.removeConnection(input.connections[0]);\n            } else {\n                this.io = input;\n            }\n            return true;\n        }\n\n        if (!input.multipleConnections && input.hasConnection())\n            this.editor.removeConnection(input.connections[0]);\n        \n        if (!this.io.multipleConnections && this.io.hasConnection())\n            this.editor.removeConnection(this.io.connections[0]);\n        \n        if (this.io instanceof Output && this.io.connectedTo(input)) {\n            let connection = input.connections.find(c => c.output === this.io);\n\n            if(connection) {\n                this.editor.removeConnection(connection);\n            }\n        }\n\n        if(this.io instanceof Output) {\n            this.editor.connect(this.io, input);\n            this.reset();\n        }\n    }\n\n    pickConnection(connection: Connection) {\n        const { output } = connection;\n\n        this.editor.removeConnection(connection);\n        this.io = output;\n    }\n}","import { IO, Input, Output } from 'rete';\nimport { Picker } from './picker';\n\nexport type FlowParams = { input?: Input, output?: Output };\n\nexport class Flow {\n\n    private picker: Picker;\n    private target?: IO | null;\n\n    constructor(picker: Picker) {\n        this.picker = picker;\n        this.target = null;\n    }\n\n    private act({ input, output }: FlowParams) {\n        if (this.unlock(input || output)) return\n\n        if (input)\n            this.picker.pickInput(input)\n        else if (output)\n            this.picker.pickOutput(output)\n        else\n            this.picker.reset();\n    }\n\n    public start(params: FlowParams, io?: IO) {\n        this.act(params);\n        this.target = io;\n    }\n\n    public complete(params: FlowParams = {}) {\n        this.act(params);\n    }\n\n    public hasTarget() {\n        return Boolean(this.target);\n    }\n\n    private unlock(io?: IO) {\n        const target = this.target;\n\n        this.target = null;\n\n        return target && target === io;\n    }\n}","import { NodeEditor } from 'rete';\nimport { renderConnection, renderPathData, updateConnection, getMapItemRecursively } from './utils';\nimport { Picker } from './picker';\nimport { Flow, FlowParams } from './flow';\nimport './events';\nimport './index.sass';\n\nfunction install(editor: NodeEditor) {\n    editor.bind('connectionpath');\n    editor.bind('connectiondrop');\n    editor.bind('connectionpick');\n    editor.bind('resetconnection');\n    \n    const picker = new Picker(editor);\n    const flow = new Flow(picker);\n    const socketsParams = new WeakMap<Element, FlowParams>();\n    \n    function pointerDown(this: HTMLElement, e: PointerEvent) {\n        const flowParams = socketsParams.get(this);\n\n        if(flowParams) {\n            const { input, output } = flowParams;\n            \n            editor.view.container.dispatchEvent(new PointerEvent('pointermove', e));\n            e.preventDefault();\n            e.stopPropagation();\n            flow.start({ input, output }, input || output);\n        }\n    }\n\n    function pointerUp(this: Window, e: PointerEvent) {\n        const flowEl = document.elementFromPoint(e.clientX, e.clientY);\n\n        if(picker.io) {\n            editor.trigger('connectiondrop', picker.io)\n        }\n        if(flowEl) {\n            flow.complete(getMapItemRecursively(socketsParams, flowEl) || {})\n        }\n    }\n\n    editor.on('resetconnection', () => flow.complete());\n\n    editor.on('rendersocket', ({ el, input, output }) => {\n        socketsParams.set(el, { input, output });\n\n        el.removeEventListener('pointerdown', pointerDown);\n        el.addEventListener('pointerdown', pointerDown);\n    });\n\n    window.addEventListener('pointerup', pointerUp);\n\n    editor.on('renderconnection', ({ el, connection, points }) => {\n        const d = renderPathData(editor, points, connection);\n\n        renderConnection({ el, d, connection })\n    });\n\n    editor.on('updateconnection', ({ el, connection, points }) => {\n        const d = renderPathData(editor, points, connection);\n\n        updateConnection({ el, d });\n    });\n\n    editor.on('destroy', () => {\n        window.removeEventListener('pointerup', pointerUp);\n    });\n}\n\nexport default {\n    name: 'connection',\n    install\n}\nexport { defaultPath } from './utils';"],"names":["toTrainCase","str","toLowerCase","replace","defaultPath","points","curvature","x1","y1","x2","y2","hx1","Math","abs","hx2","renderPathData","emitter","connection","data","d","trigger","updateConnection","el","path","querySelector","Error","setAttribute","renderConnection","classed","input","name","output","socket","svg","document","createElementNS","console","log","classList","add","appendChild","PickerView","editorView","createElement","style","position","area","this","io","parentElement","innerHTML","mouse","node","nodes","get","getSocketPosition","Output","x","y","getPoints","Picker","editor","view","on","_this","Input","multipleConnections","hasConnection","removeConnection","connections","connect","reset","connectedTo","find","c","_this2","_io","updatePseudoConnection","Flow","picker","target","unlock","pickInput","pickOutput","params","act","Boolean","install","bind","flow","socketsParams","WeakMap","pointerDown","e","flowParams","container","dispatchEvent","PointerEvent","preventDefault","stopPropagation","start","pointerUp","flowEl","elementFromPoint","clientX","clientY","complete","getMapItemRecursively","map","set","removeEventListener","addEventListener","window"],"mappings":"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"}